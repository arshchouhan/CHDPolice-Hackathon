version: '3.8'

services:
  # Main API service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: email-detection-api
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - MONGO_URI=${MONGO_URI:-mongodb://mongodb:27017/email_detection}
      - JWT_SECRET=${JWT_SECRET}
      - VIRUSTOTAL_API_KEY=${VIRUSTOTAL_API_KEY}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - PROD_REDIRECT_URI=${PROD_REDIRECT_URI}
      - PORT=3000
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./public:/app/public
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - mongodb
    restart: unless-stopped
    networks:
      - app-network

  # Browser automation service
  browser-automation:
    build:
      context: ./docker/browser-automation
      dockerfile: Dockerfile
    container_name: email-detection-browser-automation
    environment:
      - MONGO_URI=${MONGO_URI:-mongodb://mongodb:27017/email_detection}
      - API_ENDPOINT=http://api:3000/api/browser-automation/results
      - URL_TIMEOUT=30
      - SCREENSHOT_DIR=/app/screenshots
      - LOG_LEVEL=info
    volumes:
      - ./screenshots:/app/screenshots
      - ./docker/browser-automation/logs:/app/logs
    depends_on:
      api:
        condition: service_healthy
      mongodb:
        condition: service_started
    restart: unless-stopped
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE

  # MongoDB service
  mongodb:
    image: mongo:4.4
    container_name: email-detection-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    environment:
      - MONGO_INITDB_DATABASE=email_detection
    restart: unless-stopped
    networks:
      - app-network
    command: ["--wiredTigerCacheSizeGB", "1"]

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
    name: email-detection-mongodb-data
